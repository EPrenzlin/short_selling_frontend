[{"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/index.js":"1","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/App.js":"2","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reportWebVitals.js":"3","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionForm.js":"4","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reducers/exemptionReducer.js":"5","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/actions/exemptionActions.js":"6","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionSingle.js":"7","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/NavBar.js":"8","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/newexemptions.js":"9","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/DownloadCsv.js":"10","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/search.js":"11","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionContainer.js":"12","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/searchresultContainer.js":"13"},{"size":506,"mtime":1610056741390,"results":"14","hashOfConfig":"15"},{"size":2418,"mtime":1609444682082,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607379228749,"results":"17","hashOfConfig":"15"},{"size":1454,"mtime":1609088438182,"results":"18","hashOfConfig":"15"},{"size":1731,"mtime":1609445697414,"results":"19","hashOfConfig":"15"},{"size":1436,"mtime":1609447387352,"results":"20","hashOfConfig":"15"},{"size":1183,"mtime":1610487482705,"results":"21","hashOfConfig":"15"},{"size":589,"mtime":1607797347240,"results":"22","hashOfConfig":"15"},{"size":915,"mtime":1608288290599,"results":"23","hashOfConfig":"15"},{"size":429,"mtime":1608211470526,"results":"24","hashOfConfig":"15"},{"size":727,"mtime":1608242310750,"results":"25","hashOfConfig":"15"},{"size":915,"mtime":1609098175650,"results":"26","hashOfConfig":"15"},{"size":833,"mtime":1608294509507,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"t3i2gp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/index.js",[],["61","62"],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/App.js",["63"],"import './App.css';\n// all the components\nimport ExemptionForm from'./components/exemptionForm'\nimport ExemptionList from'./components/exemptionContainer' \nimport NewExemptions from'./components/newexemptions' \nimport SearchForm from'./components/search'\nimport SearchResult  from'./components/searchresultContainer'\nimport NavBar from './components/NavBar.js' \n// import ScrollToTop  from'./components/scrolltotop' \n\n// all the various mapdispatch to state, actions, or others. \nimport {connect} from 'react-redux'\nimport React, {Component} from 'react'\nimport { getExemptions, addExemption, deleteExemption, refreshExemption, searchItem } from './actions/exemptionActions'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Button from 'react-bootstrap/Button'\n\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" \nintegrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" \ncrossorigin=\"anonymous\"></link> \n\n\n\nclass App extends Component{\n  \ncomponentDidMount(){\n  this.props.getExemptions() \n}\n\n  render(){\n  return (\n  <div>     \n      <Router> \n      <NavBar/>\n      <Route exact path =\"/new\" render={() => \n      <div> \n      <ExemptionForm addExemption ={this.props.addExemption}/> \n      <NewExemptions  deleteExemption={this.props.deleteExemption} exemptions={this.props.newExemptions} refreshExemption={this.props.refreshExemption}/> \n      </div>\n      }/> \n    <Route exact path =\"/home\" render={() => <ExemptionList sortItems={this.props.sortItems} exemptions ={this.props.exemptions} deleteExemption={this.props.deleteExemption} />} /> \n    <Route exact path =\"/search\" render={() => \n    <div> \n    <SearchForm searchItem={this.props.searchItem}/>\n    <SearchResult result = {this.props.result} refreshExemption={this.props.refreshExemption} deleteExemption={this.props.deleteExemption} /> \n    </div>\n    }/>\n    </Router>\n    <ScrollToTop smooth/>   \n  </div>\n  )\n  }  \n}\n\n\nconst mapStateToProps = state =>{\n  return {\n    exemptions: state.exemptions, \n    newExemptions: state.newExemptions,\n    result: state.searchResult, \n  }\n}\n\n\nconst componentConnectorFunction = connect(mapStateToProps,{getExemptions, addExemption, deleteExemption, refreshExemption,searchItem })\nconst ConnectedApp = componentConnectorFunction(App)\nexport default ConnectedApp\n\n","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reportWebVitals.js",[],["64","65"],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionForm.js",["66","67"],"import React, {Component} from 'react' \nimport Button from 'react-bootstrap/Button'\nimport {handleStateChange} from '../actions/exemptionActions'  \nimport {connect} from 'react-redux'\n\nexport default class exemptionForm extends Component{\n\n    state = {\n        name:\"\", \n        isin:\"\", \n        stock_market:\"\"\n    }\n\n    onSubmit = event => {\n        event.preventDefault()\n        const exemption = {name:this.state.name, isin:this.state.isin, stock_market:this.state.stock_market}\n        this.props.addExemption(exemption)\n        this.setState({\n            name:\"\", \n            isin:\"\",  \n            stock_market:\"\"\n        })\n    }\n    \n    handleChange = event => {\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n      }\n\n\n    render(){\n        return(    \n    <div> \n        <form className =\"text-center\" onSubmit={this.onSubmit}>\n        <label>\n        Name:\n        <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n        </label>\n        <label> \n        ISIN: \n        <input type=\"text\" name =\"isin\" value={this.state.isin} onChange={this.handleChange} /> \n        </label> \n        <label> \n        Stock Market: \n        <input type =\"text\" name=\"stock_market\" value={this.state.stock_market} onChange={this.handleChange} /> \n        </label>\n        <Button type=\"submit\">Create a New Exemption</Button>\n        </form> \n</div>\n        )\n      \n    }\n}\n\n","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reducers/exemptionReducer.js",["68"]," \nconst exemptionReducer = (state= {exemptions:[], newExemptions:[], searchResult:[] }, action) => {\n\n    switch (action.type) {\n    case 'SET_EXEMPTIONS':\n    return {\n            ...state,\n            exemptions: action.exemptions, \n        }\n\n    case 'ADD_EXEMPTION':\n        return{\n            ...state, \n            exemptions:[...state.exemptions,action.NewExemption],\n            newExemptions:[...state.newExemptions,action.NewExemption]\n        }\n\n    case 'DELETE_EXEMPTION':\n        return{\n            ...state, \n            exemptions: state.exemptions.filter(exemption => exemption.id !== action.id), \n            newExemptions:state.newExemptions.filter(exemption => exemption.id !== action.id), \n            searchResult:state.searchResult.filter(exemption => exemption.id !== action.id)\n        }\n\n    case 'REFRESH':\n        return{\n            ...state,\n            exemptions:[...state.exemptions],\n            newExemptions:[],\n            searchResult:[] \n        }\n\n    case 'SEARCH_FORM_STATE':\n            const searchValue = action.search.toString().toUpperCase().replace(/ /g, \"\") \n            const foundItem = state.exemptions.filter(exemption =>  \n                {\n                const allValues = Object.values(exemption).map(exemption => exemption.toString().toUpperCase().replace(/ /g, \"\"))\n                if(allValues.includes(searchValue))\n                { return exemption }}\n                )\n\n            return{\n                ...state, \n                exemptions:[...state.exemptions], \n                newExemptions:[...state.newExemptions], \n                searchResult: foundItem\n            }\n\n    default:\n        return state;\n    }\n  }\n\n\n  export default exemptionReducer \n\n\n","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/actions/exemptionActions.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionSingle.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/NavBar.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/newexemptions.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/DownloadCsv.js",[],["69","70"],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/search.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionContainer.js",["71"],"import React, {Component} from 'react' \nimport ExemptionSingle from './exemptionSingle' \nimport DownloadCsv from'./DownloadCsv' \nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\n\nexport default class ExemptionList extends Component{\n\n    sortExemptions = event => {\n        console.log(\"I am being pressed\")\n        this.props.sortItems(this.props.exemptions) \n    }\n\n    render(){\n        return( \n            <div> \n            <DownloadCsv exemptions={this.props.exemptions}/> \n            <Container> \n            <Row md={3}> \n            {this.props.exemptions.map(exemption => {\n            return <ExemptionSingle exemption ={exemption} key={exemption.id} deleteExemption={this.props.deleteExemption}/> \n            })}\n            </Row>\n            </Container>\n            </div>\n\n            \n        )\n      \n    }\n}\n\n\n","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/searchresultContainer.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":17,"column":8,"nodeType":"78","messageId":"79","endLine":17,"endColumn":14},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"76","severity":1,"message":"82","line":3,"column":9,"nodeType":"78","messageId":"79","endLine":3,"endColumn":26},{"ruleId":"76","severity":1,"message":"83","line":4,"column":9,"nodeType":"78","messageId":"79","endLine":4,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":36,"column":65,"nodeType":"86","messageId":"87","endLine":36,"endColumn":67},{"ruleId":"72","replacedBy":"88"},{"ruleId":"74","replacedBy":"89"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":14},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["90"],["91"],"'handleStateChange' is defined but never used.","'connect' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["90"],["91"],"no-global-assign","no-unsafe-negation"]