[{"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/index.js":"1","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/App.js":"2","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reportWebVitals.js":"3","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionForm.js":"4","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionList.js":"5","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reducers/exemptionReducer.js":"6","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/actions/exemptionActions.js":"7","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionSingle.js":"8","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/NavBar.js":"9","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/newexemptions.js":"10","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/DownloadCsv.js":"11","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/search.js":"12","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/searchresult.js":"13"},{"size":1275,"mtime":1607701126249,"results":"14","hashOfConfig":"15"},{"size":2271,"mtime":1608071449409,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607379228749,"results":"17","hashOfConfig":"15"},{"size":1353,"mtime":1607875107678,"results":"18","hashOfConfig":"15"},{"size":947,"mtime":1607883390600,"results":"19","hashOfConfig":"15"},{"size":2072,"mtime":1608071977977,"results":"20","hashOfConfig":"15"},{"size":1624,"mtime":1607883391452,"results":"21","hashOfConfig":"15"},{"size":1048,"mtime":1607798397366,"results":"22","hashOfConfig":"15"},{"size":589,"mtime":1607797347240,"results":"23","hashOfConfig":"15"},{"size":932,"mtime":1607870726580,"results":"24","hashOfConfig":"15"},{"size":429,"mtime":1608072675688,"results":"25","hashOfConfig":"15"},{"size":761,"mtime":1607978511860,"results":"26","hashOfConfig":"15"},{"size":830,"mtime":1608072676435,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"t3i2gp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/index.js",[],["59","60"],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/App.js",["61"],"import './App.css';\n// all the components\nimport ExemptionForm from'./components/exemptionForm'\nimport ExemptionList from'./components/exemptionList' \nimport NewExemptions from'./components/newexemptions' \nimport SearchForm from'./components/search'\nimport SearchResult  from'./components/searchresult'\nimport NavBar from './components/NavBar.js' \n// import ScrollToTop  from'./components/scrolltotop' \n\n// all the various mapdispatch to state, actions, or others. \nimport {connect} from 'react-redux'\nimport React, {Component} from 'react'\nimport { getExemptions, addExemption, deleteExemption, refreshExemption, searchItem } from './actions/exemptionActions'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Button from 'react-bootstrap/Button'\n\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" \nintegrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" \ncrossorigin=\"anonymous\"></link> \n\n\n\nclass App extends Component{\n  \ncomponentDidMount(){\n  this.props.getExemptions() \n}\n\n  render(){\n  return (\n  <div>     \n      <Router> \n      <NavBar/>\n      <Route exact path =\"/new\" render={() => \n      <div> \n      <ExemptionForm addExemption ={this.props.addExemption}/> \n      <NewExemptions  deleteExemption={this.props.deleteExemption} exemptions={this.props.newExemptions} refreshExemption={this.props.refreshExemption}/> \n      </div>\n      }/> \n    <Route exact path =\"/home\" render={() => <ExemptionList exemptions ={this.props.exemptions} deleteExemption={this.props.deleteExemption}/>} /> \n    <Route exact path =\"/search\" render={() => \n    <div> \n    <SearchForm searchItem={this.props.searchItem}/>\n    <SearchResult result = {this.props.result} refreshExemption={this.props.refreshExemption} deleteExemption={this.props.deleteExemption} /> \n    </div>\n    }/>\n    </Router>\n    <ScrollToTop smooth/>   \n  </div>\n  )\n  }  \n}\n\n\nconst mapStateToProps = state =>{\n  return {\n    exemptions: state.exemptions, \n    newExemptions: state.newExemptions,\n    result: state.searchResult\n  }\n}\n\n\nexport default connect(mapStateToProps,{getExemptions, addExemption, deleteExemption, refreshExemption,searchItem})(App)\n\n","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reportWebVitals.js",[],["62","63"],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionForm.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionList.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/reducers/exemptionReducer.js",["64","65"]," \nconst exemptionReducer = (state= {exemptions:[], newExemptions:[], searchResult:[] }, action) => {\n\n    switch (action.type) {\n    case 'SET_EXEMPTIONS':\n    console.log(action)\n    return {\n            ...state,\n            exemptions: action.exemptions, \n        }\n\n    case 'ADD_EXEMPTION':\n        console.log(\"IN THE ADD EXEMPTION\", action) \n        return{\n            ...state, \n            exemptions:[...state.exemptions,action.NewExemption],\n            newExemptions:[...state.newExemptions,action.NewExemption]\n        }\n\n    case 'DELETE_EXEMPTION':\n        console.log(\"IN the delete exemption reducer\", action)\n        return{\n            ...state, \n            exemptions: state.exemptions.filter(exemption => exemption.id !== action.id), \n            newExemptions:state.newExemptions.filter(exemption => exemption.id !== action.id), \n            searchResult:state.searchResult.filter(exemption => exemption.id !== action.id)\n        }\n\n    case 'REFRESH':\n        console.log(\"in the refresh reducer\")\n        return{\n            ...state,\n            exemptions:[...state.exemptions],\n            newExemptions:[] \n        }\n\n    case 'SEARCH_FORM_STATE':\n            console.log(\"in the search form reducer\")\n            const searchValue = action.search.toString().toUpperCase().replace(/ /g, \"\") \n            const foundItem = state.exemptions.filter(exemption =>  \n                {\n                const allValues = Object.values(exemption).map(exemption => exemption.toString().toUpperCase().replace(/ /g, \"\"))\n                if(allValues.includes(searchValue))\n                { return exemption }}\n                )\n\n\n\n            return{\n                ...state, \n                exemptions:[...state.exemptions], \n                newExemptions:[...state.newExemptions], \n                searchResult: foundItem\n            }\n\n    default:\n        return state;\n    }\n  }\n\n  const removeSpace = (string) =>{\n    const newText = string.toString().toUpperCase().replace(/ /g, \"\")\n    return newText\n  }\n\n  export default exemptionReducer \n\n\n","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/actions/exemptionActions.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/exemptionSingle.js",["66"],"// idea is to iterate over the mass list of exmeptions, and display each one in the form of a card ( like pokemon basically ) \nimport React, {Component} from 'react' \nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nexport default class ExemptionSingle extends Component{\n\n    onClick = (event) =>{\n        event.preventDefault() \n        console.log(this.props.exemption.id)\n        this.props.deleteExemption(this.props.exemption.id)\n    }\n\nrender(){\n    return(\n        <div> \n        <Card className =\"text-center\" style={{ width: '21rem' }}>\n        <Card.Body>\n            <Card.Title>{this.props.exemption.name}</Card.Title>\n            <Card.Text>\n            ISIN: {this.props.exemption.isin} <br/>\n            Stock Market: {this.props.exemption.stock_market} <br/> \n            <Button variant=\"primary\" size='sm' onClick={this.onClick}>Remove from DB</Button> \n            </Card.Text>\n        </Card.Body>\n        </Card>\n        </div>\n\n\n    )\n}\n}\n","/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/NavBar.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/newexemptions.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/DownloadCsv.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/search.js",[],"/Users/erik/Desktop/Coding/Flatiron/final_project/mme_frontend/src/components/searchresult.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":17,"column":8,"nodeType":"74","messageId":"75","endLine":17,"endColumn":14},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":40,"column":65,"nodeType":"80","messageId":"81","endLine":40,"endColumn":67},{"ruleId":"72","severity":1,"message":"82","line":61,"column":9,"nodeType":"74","messageId":"75","endLine":61,"endColumn":20},{"ruleId":"72","severity":1,"message":"83","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["84"],["85"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'removeSpace' is assigned a value but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]